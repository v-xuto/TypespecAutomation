trigger:
  branches:
    include:
      - master
      - master-linux

pr:
  branches:
    include:
      - master
      - master-linux

parameters:
  - name: runWindows
    displayName: 'Run Windows Tests'
    type: boolean
    default: true
  - name: runLinux
    displayName: 'Run Linux UI Tests'
    type: boolean
    default: true

stages:
  - stage: WindowsTests
    displayName: "Run Windows Tests"
    condition: eq('${{ parameters.runWindows }}', true)
    jobs:
      - job: RunWindowsTests_1_CreateTypespecProject
        pool:
          vmImage: "windows-latest"
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "20.18.3"
            displayName: "Install Node.js"

          - script: |
              npm install
            displayName: "Install dependencies"

          - script: |
              echo "Running Create Test Cases"
              npm run test:create
            displayName: "Run Create Test Cases"
            env:
              BUILD_ARTIFACT_STAGING_DIRECTORY: $(Build.ArtifactStagingDirectory)
              CI: true
            continueOnError: true

          - task: PublishBuildArtifacts@1
            inputs:
              path: "$(Build.ArtifactStagingDirectory)"
              artifact: "screenshots"
              publishLocation: "Container"
              includePatterns: "images/**/*.png"
            displayName: "Publish screenshots to Artifacts"

      - job: RunWindowsTests_2_EmitTypespecProject
        pool:
          vmImage: "windows-latest"
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "20.18.3"
            displayName: "Install Node.js"

          - task: UseDotNet@2
            inputs:
              packageType: "sdk"
              version: "8.0.204"
            displayName: "Install .NET SDK"

          - script: |
              wget https://dlcdn.apache.org/maven/maven-3/3.9.6/binaries/apache-maven-3.9.6-bin.tar.gz
              tar -xzf apache-maven-3.9.6-bin.tar.gz -C /usr/local/
              echo 'export PATH="/usr/local/apache-maven-3.9.6/bin:$PATH"' >> ~/.bashrc
              mvn -v
            displayName: "Install Maven"

          - script: |
              npm install
            displayName: "Install dependencies"

          - script: |
              set JAVA_HOME=%JAVA_HOME_21_X64%
              set PATH=%JAVA_HOME%\bin;%PATH%
              echo "Running Emit Test Cases"
              npm run test:emit
            displayName: "Run Emit Test Cases"
            env:
              BUILD_ARTIFACT_STAGING_DIRECTORY: $(Build.ArtifactStagingDirectory)
              CI: true
            continueOnError: true

          - task: PublishBuildArtifacts@1
            inputs:
              path: "$(Build.ArtifactStagingDirectory)"
              artifact: "screenshots"
              publishLocation: "Container"
              includePatterns: "images/**/*.png"
            displayName: "Publish screenshots to Artifacts"

      - job: RunWindowsTests_3_ImportTypespecProject
        pool:
          vmImage: "windows-latest"
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "20.18.3"
            displayName: "Install Node.js"

          - script: |
              npm install
            displayName: "Install dependencies"

          - script: |
              echo "Running Import Test Cases"
              npm run test:import
            displayName: "Run Import Test Cases"
            env:
              BUILD_ARTIFACT_STAGING_DIRECTORY: $(Build.ArtifactStagingDirectory)
              CI: true
            continueOnError: true

          - task: PublishBuildArtifacts@1
            inputs:
              path: "$(Build.ArtifactStagingDirectory)"
              artifact: "screenshots"
              publishLocation: "Container"
              includePatterns: "images/**/*.png"
            displayName: "Publish screenshots to Artifacts"

      - job: RunWindowsTests_4_PreviewTypespecProject
        pool:
          vmImage: "windows-latest"
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "20.18.3"
            displayName: "Install Node.js"

          - script: |
              npm install
            displayName: "Install dependencies"

          - script: |
              echo "Running Preview Test Cases"
              npm run test:preview
            displayName: "Run Preview Test Cases"
            env:
              BUILD_ARTIFACT_STAGING_DIRECTORY: $(Build.ArtifactStagingDirectory)
              CI: true
            continueOnError: true

          - task: PublishBuildArtifacts@1
            inputs:
              path: "$(Build.ArtifactStagingDirectory)"
              artifact: "screenshots"
              publishLocation: "Container"
              includePatterns: "images/**/*.png"
            displayName: "Publish screenshots to Artifacts"

  - stage: LinuxUITests
    displayName: "Run Linux Electron UI Tests"
    condition: eq('${{ parameters.runLinux }}', true)
    jobs:
    - job: RunElectronUITestsOnLinux
      pool:
        vmImage: "ubuntu-latest"

      steps:
        - task: NodeTool@0
          inputs:
            versionSpec: "20.18.3"
          displayName: "Install Node.js"

        - script: |
            sudo apt-get update
            sudo apt-get install -y \
              libgtk-3-0 libxss1 libasound2t64 libnss3 libx11-xcb1 \
              libxcomposite1 libxrandr2 libxcb-dri3-0 libdrm2 libgbm1 \
              libxdamage1 libatk-bridge2.0-0 libcups2 libxkbcommon0 \
              xvfb x11-apps imagemagick
          displayName: "Install Linux Dependencies"

        - script: |
            export DISPLAY=:99
            /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
            echo ">>> Started xvfb"
          displayName: "Start xvfb and Set DISPLAY"

        - script: |
            npm install

            node -e "require('@vscode/test-electron').download().then(p => console.log('##vso[task.setvariable variable=VSCODE_E2E_DOWNLOAD_PATH]' + p))"
          displayName: "Install deps and download VSCode"

        - script: |
            export DISPLAY=:99
            export VSCODE_E2E_DOWNLOAD_PATH=$(VSCODE_E2E_DOWNLOAD_PATH)
            chmod +x screen.sh
            ./screen.sh &
            echo ">>> end screen"
            sudo snap install code --classic
            npm run test
          displayName: "Run Playwright Electron UI Tests"
          env:
            CI: true
            DISPLAY: ":99"
            VSCODE_E2E_DOWNLOAD_PATH: $(VSCODE_E2E_DOWNLOAD_PATH)
            ELECTRON_DISABLE_SANDBOX: "1"
            BUILD_ARTIFACT_STAGING_DIRECTORY: $(Build.ArtifactStagingDirectory)
          continueOnError: true
        - script: |
            ls /home/vsts/work/1/a
          displayName: "List artifacts"

        - task: PublishBuildArtifacts@1
          inputs:
            path: "$(Build.ArtifactStagingDirectory)"
            artifact: "screenshots"
            publishLocation: "Container"
            includePatterns: "*.png"
          displayName: "Publish Screenshots"